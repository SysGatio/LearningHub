// <auto-generated />
using System;
using LearningHub.Data.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LearningHub.Data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240106015443_Mig01")]
    partial class Mig01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LearningHub.Domain.MessageQueueLabs.Entities.FailureLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("log_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ExceptionStackTrace")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("exception-stack-trace");

                    b.Property<string>("ExceptionText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("exception-text");

                    b.Property<string>("InterfaceName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("interface-name");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ip-address");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("message-text");

                    b.Property<DateTime>("OccurrenceDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("occurrence-date");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user-name");

                    b.HasKey("Id");

                    b.ToTable("failure-log");
                });

            modelBuilder.Entity("LearningHub.Domain.MessageQueueLabs.Entities.SuccessLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("log_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("InterfaceName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("interface-name");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ip-address");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("message-text");

                    b.Property<DateTime>("OccurrenceDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("occurrence-date");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user-name");

                    b.HasKey("Id");

                    b.ToTable("success-log");
                });
#pragma warning restore 612, 618
        }
    }
}
